<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:AMLib="http://schemas.amlib.com/winfx/2006/xaml/presentation"
                    xmlns:instanceBuilders="clr-namespace:Microsoft.Expression.Platform.WPF.InstanceBuilders;assembly=Microsoft.Expression.Platform.WPF"
                    xmlns:viewModels="clr-namespace:VSPowerTools.ToolWindows.LanguageMassEditor.ViewModels">


	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
	<AMLib:AnyBooleanConverter x:Key="AnyBooleanConverter"></AMLib:AnyBooleanConverter>

	<SolidColorBrush x:Key="TitleBarBackgroundBrush" Color="#EFEFF2" />
	<SolidColorBrush x:Key="Vs2012WindowBorderBrush" Color="#007ACC" />
	<SolidColorBrush x:Key="Vs2012WindowBorderBrushInactive" Color="#999999" />
	<SolidColorBrush x:Key="Vs2012WindowStatusForeground" Color="#FFFFFF" />
	<SolidColorBrush x:Key="Vs2012WindowStatusForegroundInactive" Color="#FFFFFF" />
	
	<SolidColorBrush x:Key="BrushGray0" Color="#000"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray1" Color="#111"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray2" Color="#222"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray3" Color="#333"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray4" Color="#444"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray5" Color="#555"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray6" Color="#666"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray7" Color="#777"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray8" Color="#888"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray9" Color="#999"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray10" Color="#aaa"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray11" Color="#bbb"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray12" Color="#ccc"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray13" Color="#ddd"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray14" Color="#eee"></SolidColorBrush>
	<SolidColorBrush x:Key="BrushGray15" Color="#fff"></SolidColorBrush>

	<LinearGradientBrush x:Key="GradientLightToDark" StartPoint="0,1" EndPoint="0,0">
		<GradientStop Color="#444" Offset="0"></GradientStop>
		<GradientStop Color="#aaa" Offset=".9"></GradientStop>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="GradientDarkToLight" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#444" Offset="0"></GradientStop>
		<GradientStop Color="#aaa" Offset="0.9"></GradientStop>
	</LinearGradientBrush>

	<Style TargetType="{x:Type TextBox}" x:Key="TextBoxDefault">
		<Setter Property="Background" Value="{StaticResource BrushGray6}"/>
		<Setter Property="Foreground" Value="{StaticResource BrushGray13}"/>
		<Setter Property="BorderBrush" Value="{StaticResource GradientDarkToLight}"/>
		<Setter Property="BorderThickness" Value="1"/>
	</Style>

	<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxDefault}">
	</Style>

	<ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
		<Grid>
			<Border BorderBrush="{StaticResource GradientDarkToLight}" 
					CornerRadius="0" 
					BorderThickness="1"
					Name="Border" 
					Background="{StaticResource GradientLightToDark}" 
					Grid.ColumnSpan="3">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition Width="24" />
					</Grid.ColumnDefinitions>
					<Border 
							BorderBrush="{StaticResource GradientDarkToLight}"
							CornerRadius="0"
							BorderThickness="0"
							Background="{StaticResource GradientLightToDark}"
							Grid.Column="0" />
					<Path  
							Data="M0,0L4,4 8,0z"
							HorizontalAlignment="Center"
							Fill="{StaticResource BrushGray13}"
							Name="Arrow"
							VerticalAlignment="Center"
							Width="10"
							Grid.Column="1" />
				</Grid>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="ToggleButton.IsChecked" Value="True">
				<Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource BrushGray15}"/>
				<Setter Property="Border.BorderBrush" TargetName="Border" Value="{StaticResource BrushGray13}"/>
				<Setter Property="Border.BorderThickness" TargetName="Border" Value="1,1,1,0"></Setter>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource BrushGray5}"/>
				<Setter Property="Border.BorderBrush" TargetName="Border" Value="{StaticResource BrushGray3}"/>
				<Setter Property="TextElement.Foreground" Value="{StaticResource BrushGray11}"/>
				<Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource BrushGray5}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="{x:Type GroupBox}">
		<Setter Property="BorderThickness" Value="0"></Setter>
		<Setter Property="Foreground" Value="{StaticResource BrushGray13}"></Setter>
		<Setter Property="Background" Value="{StaticResource BrushGray5}"></Setter>
		<Setter Property="Margin" Value="3"></Setter>
		<Setter Property="HeaderTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border Margin="-9,0,0,0" CornerRadius="4" Background="{StaticResource BrushGray5}" Padding="8,0,8,3">
						<TextBlock Foreground="{StaticResource BrushGray13}" Text="{Binding}"></TextBlock>
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock Foreground="{StaticResource BrushGray13}" Text="{Binding}"></TextBlock>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton
											ClickMode="Press"
											Name="ToggleButton"
											IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
											Focusable="False"
											Template="{StaticResource ComboBoxToggleButtonTemplate}">
							<ToggleButton.Style>
								<Style TargetType="ToggleButton">
									<Setter Property="Cursor" Value="Hand"></Setter>
									<Style.Triggers>
										<Trigger Property="ToggleButton.IsChecked" Value="True">
											<Setter Property="Cursor" Value="{x:Null}"></Setter>
										</Trigger>
									</Style.Triggers>
								</Style>
							</ToggleButton.Style>
						</ToggleButton>
						<ContentPresenter
							Margin="3,3,28,3"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Name="ContentSite"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
							Content="{TemplateBinding ComboBox.SelectionBoxItem}"
							IsHitTestVisible="False" />
						<Popup
							Placement="Bottom"
							Name="Popup"
							Focusable="False"               
							AllowsTransparency="True"               
							IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
							PopupAnimation="Slide">
							<Grid
								MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
								MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
								Name="DropDown"
								SnapsToDevicePixels="True">
								<Border
									BorderBrush="{StaticResource BrushGray15}"
									BorderThickness="1,0,1,1"
									Name="DropDownBorder"
									Background="{StaticResource BrushGray4}">
									<ScrollViewer Margin="0" SnapsToDevicePixels="True">
										<ItemsPresenter Cursor="Hand" Margin="0,0,22,0"
											KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Border>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{StaticResource BrushGray15}"/>
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
						</Trigger>
						<Trigger Property="Window.AllowsTransparency" SourceName="Popup" Value="True">
							<Setter Property="Border.CornerRadius" TargetName="DropDownBorder" Value="0"/>
							<Setter Property="Border.BorderThickness" TargetName="DropDownBorder" Value="1,0,1,1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="MinWidth" Value="150"></Setter>
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	
	<DataTemplate x:Key="ResourceViewModelComboBoxTemplate" DataType="{x:Type viewModels:ResourceViewModel}">
		<Grid Margin="10,0" x:Name="Grid" Background="Transparent">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="1*"></ColumnDefinition>
				<ColumnDefinition Width="Auto"></ColumnDefinition>
				<ColumnDefinition Width="Auto"></ColumnDefinition>
				<ColumnDefinition Width="46"></ColumnDefinition>
			</Grid.ColumnDefinitions>
			<TextBlock Grid.Column="0" Foreground="{StaticResource BrushGray13}" Text="{Binding Path=RessourceName}"></TextBlock>
			<Border Grid.Column="1" x:Name="DirtyMarker" Visibility="Collapsed">
				<Ellipse Width="10" Height="10" Fill="Orange" Margin="0,0,10,0"></Ellipse>
			</Border>
			<TextBlock Grid.Column="2" Foreground="{StaticResource BrushGray13}" HorizontalAlignment="Right" Text="Nodes"></TextBlock>
			<TextBlock Grid.Column="3" Foreground="{StaticResource BrushGray13}" HorizontalAlignment="Right" Text="{Binding Path=Nodes.Count, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"></TextBlock>
		</Grid>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=IsDirty}" Value="True">
				<Setter TargetName="DirtyMarker" Property="Visibility" Value="Visible"></Setter>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<Style TargetType="{x:Type Button}">
		<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
		<Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
		<Setter Property="Foreground" Value="White"></Setter>
		<Setter Property="Background" Value="{StaticResource GradientLightToDark}"/>
		<Setter Property="BorderBrush" Value="{StaticResource GradientDarkToLight}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Cursor" Value="Hand"></Setter>
		<Setter Property="Focusable" Value="False"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border 
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{StaticResource BrushGray15}"></Setter>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" Value="Red"></Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="{StaticResource BrushGray6}"></Setter>
							<Setter Property="BorderBrush" Value="{StaticResource BrushGray9}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type Label}">
		<Setter Property="Foreground" Value="White"/>
	</Style>

	<Style TargetType="{x:Type StackPanel}" x:Key="spToolStrip">
		<Setter Property="Background" Value="{x:Static SystemColors.WindowFrameBrush}"/>
		<Setter Property="Height" Value="35"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<Style TargetType="{x:Type HeaderedContentControl}">
		<Setter Property="BorderBrush" Value="Blue"></Setter>
		<Setter Property="BorderThickness" Value="2"></Setter>
		<Setter Property="HeaderTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border Background="#555555">
						<TextBlock Margin="5" FontSize="14" Foreground="#ffffff" Text="{Binding}"></TextBlock>
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type Window}" x:Key="DefaultWindowStyle">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="WindowStyle" Value="None"></Setter>
	</Style>
</ResourceDictionary>